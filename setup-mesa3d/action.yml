name: "Setup Mesa3D"
description: "Setup Mesa3D (Windows only)"
inputs:
  mesa3d-version:
    description: Mesa3D version to setup
    default: "20.3.4"  # Newer versions have a "known issue" (https://github.com/pal1000/mesa-dist-win/blob/4f66d3accfa7fd94baa184109ff7ac8843eae035/readme.md#L50)
    required: false
  architecture:
    description: Architecture (x64 or x86)
    default: "x64"
    required: false
  install-directory:
    description: Location to install Mesa3D
    default: "."
    required: false
runs:
  using: composite
  steps:
    - name: Cache downloads
      if: runner.os == 'Windows'
      uses: actions/cache@v3
      id: cache
      with:
        path: |
          ${{ inputs.install-directory }}\${{ inputs.architecture }}\opengl32.dll
          ${{ inputs.install-directory }}\${{ inputs.architecture }}\libglapi.dll
        key: mesa3d-${{ inputs.mesa3d-version }}-${{ inputs.architecture }}-cache
    - name: Download Mesa3D
      if: runner.os == 'Windows' && steps.cache.outputs.cache-hit != 'true'
      shell: cmd
      run: |
        curl.exe -L --output mesa.7z --url https://github.com/pal1000/mesa-dist-win/releases/download/${{ inputs.mesa3d-version }}/mesa3d-${{ inputs.mesa3d-version }}-release-msvc.7z
        "C:\Program Files\7-Zip\7z.exe" x mesa.7z
      working-directory: ${{ inputs.install-directory }}
    - name: Install Mesa3D on Windows
      if: runner.os == 'Windows'
      shell: cmd
      run: |
        del "opengl32.dll" >nul 2>&1
        del "libglapi.dll" >nul 2>&1
        mklink opengl32.dll "${{ inputs.architecture }}\opengl32.dll"
        mklink libglapi.dll "${{ inputs.architecture }}\libglapi.dll"
      working-directory: ${{ inputs.install-directory }}

